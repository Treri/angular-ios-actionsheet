/*!
 * angular-ios-actionsheet 1.0.0
 * iOS7+ style actionsheet service for angular
 * License: MIT
 * Author: Treri
 * build: Fri Sep 04 2015 17:42:40 GMT+0800 (CST)
 **/
angular.module("ios-actionsheet",[]).directive("iosActionSheet",function(){return{restrict:"AE",replace:!0,template:['<div class="ios-actionsheet-overlay" ng-click="onClick($event)">','<div class="ios-actionsheet">','<div class="ios-actionsheet-group" ng-repeat="group in buttons">',"<div ng-click=\"onClick($event, button, $index, $parent.$index)\" ng-repeat=\"button in group\" ng-class=\"{'ios-actionsheet-label': (button.label && $index == 0), 'ios-actionsheet-button': !button.label, 'ios-actionsheet-button-color': button.color, 'ios-actionsheet-button-bold': button.bold, 'ios-actionsheet-button-disable': button.disable}\">{{ button.text }}</div>","</div>","</div>","</div>"].join("")}}).factory("iosActionSheet",["$rootScope","$compile","$animate","$q","$document","$log",function(t,e,n,o,i,a){function r(r){if(!angular.isArray(r))return a.error("iosActionSheet expect an array of buttons"),o.when();angular.isArray(r[0])||(r=[r]);var s=o.defer(),c=t.$new(!0),l=e("<div ios-action-sheet></div>")(c);return c.buttons=r,c.onClick=function(t,e,o,i){t.preventDefault(),t.stopPropagation();var a;if(e){if(e.disable||e.label)return;a={button:e,index:o,parentIndex:i},angular.isFunction(e.onClick)&&e.onClick(a)}n.leave(l).then(function(){a?s.resolve(a):s.reject()})},n.enter(l,i[0].body),s.promise}return r}]);